<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.proxy.TestProxy"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.prototype.TestPrototype"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.prototype.Enclosure"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="java.io.ByteArrayOutputStream"/>
<fullyQualifiedTypeName name="java.io.ObjectOutputStream"/>
<fullyQualifiedTypeName name="java.io.ByteArrayInputStream"/>
<fullyQualifiedTypeName name="java.io.ObjectInputStream"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.templatemethod.AbstractClass"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.templatemethod.ConcrereClassA"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.templatemethod.TestTemplateMethod"/>
<fullyQualifiedTypeName name="java.lang.reflect.Method"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.Facade.SubSystemB"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.Facade.SubSystemA"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.Facade.Facade"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.factorymethod.TestFactoryMethod"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.Facade.TestFacade"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.builder.Builder"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.builder.TestBuilder"/>
<fullyQualifiedTypeName name="java.util.Observable"/>
<fullyQualifiedTypeName name="java.util.Observer"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.observer.TestObserver"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.AbstractFactory"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.AbstractProductB"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.ProductA1"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.ProductB1"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.ProductA2"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.ProductB2"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.AbstractProductA"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.ConcreteFactory1"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.abstractfactory.TestAbstractFactory"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.state.TestState"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.adapter.Adapter"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.adapter.Adaptee"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.adapter.TestAdapter"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.memento.whitebox.TestWhiteMomento"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.memento.blackbox.TestBlackMomento"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.memento.TestMomento"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.composite.transparent.TestTransparentComposite"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.composite.safety.TestSafetyComposite"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.composite.TestComposite"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.iterator.TestIterator"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.singleton.EagerSingleton"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.singleton.LazySingleton"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.singleton.Singleton1"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.singleton.Singleton2"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.singleton.Singleton3"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.singleton.TestSingleton"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.bridge.ConcreteImplementorA"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.bridge.RefinedAbstraction"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.bridge.ConcreteImplementorB"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.bridge.TestBridge"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.command.Receiver"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.command.Command"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.command.CommandTest"/>
<fullyQualifiedTypeName name="orz.xuchao.javapatterns.chainofresponsibility.ChainOfResponsibilityTest"/>
</qualifiedTypeNameHistroy>
