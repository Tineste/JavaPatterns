package orz.xuchao.javapatterns.prototype;

public class TestPrototype {
	
	public static void Test(){
		Prototype prototype=new ConcretePrototype();
		prototype.setName("aaaa");
		Enclosure enclosure=new Enclosure();
		enclosure.setMessage("message AAAA");
		prototype.setEnclosure(enclosure);
		
		
//		浅拷贝
		Prototype prototype1=prototype.clone();
		System.out.println(prototype.getName()+"   "+prototype.getEnclosure().getMessage());
		System.out.println(prototype1.getName()+"   "+prototype1.getEnclosure().getMessage());
		
		prototype.setName("bbb");
		prototype.getEnclosure().setMessage("message BBBB");
		
		System.out.println(prototype.getName()+"   "+prototype.getEnclosure().getMessage());
		System.out.println(prototype1.getName()+"   "+prototype1.getEnclosure().getMessage());
		
//		深拷贝
		Prototype prototype2=prototype.deepClone();
		System.out.println(prototype.getName()+"   "+prototype.getEnclosure().getMessage());
		System.out.println(prototype1.getName()+"   "+prototype1.getEnclosure().getMessage());
		
		prototype.setName("bbb");
		prototype.getEnclosure().setMessage("message BBBB");
		
		System.out.println(prototype.getName()+"   "+prototype.getEnclosure().getMessage());
		System.out.println(prototype1.getName()+"   "+prototype1.getEnclosure().getMessage());
		
	}

}
